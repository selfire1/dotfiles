extends html, javascript, css

priority 3000
snippet vbase:pp Boilerplate for PixelPixel components
	<script setup lang="ts">
	${0}
	</script>

	<template lang="pug">
	</template>

priority 2000
snippet propsWithDefaults Set typed props with defaults
	const props = withDefaults(
		defineProps<{
			${0}
		}>(),
		{
			
		}
	)

priority 2000
snippet templatePug Template with language Pug
	<template lang="pug">
	${0}
	</template>

snippet getPage Get the details from the page
	const { getPage } = usePage();
	const page = getPage();

snippet ContentRenderer
	ContentRenderer(v-if="getBodyContent(content)" :value="getBodyContent(content)")
		template(#empty)

priority 3000
snippet Class
	class="${0}"

snippet asyncQueryContent
	const { data: ${0} } = await useAsyncData("${1}", () => queryContent("/${2}").find());

snippet standardSpace
	&#32;

snippet nonBreakingSpace
	&nbsp;

snippet Log
	console.log("debug", ${0})

priority 2000
snippet tsProps
	const props = defineProps<{
			${0}
		}>()

snippet vbase:typed
	<script setup lang="ts">
	import type { $TM_FILENAME } from "@/types/components/$TM_FILENAME";
	const props = defineProps<$TM_FILENAME>()
	</script>

	<template lang="pug">
	.bg-red-200.$TM_FILENAME.debug(data-component="$TM_FILENAME")
		pre.text-sm {{ props }}
	</template>

snippet useProse
	const { getBodyContent } = useProse();

snippet clog console.log
	console.log(${0})

snippet usePage Get the details from the page
	import { stripTrailingSlash } from "~/utilities";
	const route = useRoute()

	const { data: page } = await useAsyncData("page-" + stripTrailingSlash(route.path), () =>
		queryContent(stripTrailingSlash(route.path)).findOne(),
	);

	if (!page?.value) {
		throw createError({ statusCode: 404, message: "Page not found" });
	}

snippet tsDoc
	/**
   * ${0}
   */

snippet vfortemplate
	template(v-for="(item, index) in ${0}" :key='')

snippet viftemplate
	template(v-if="${0}?.length")

